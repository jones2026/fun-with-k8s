{
	"info": {
		"_postman_id": "31134bb0-aa57-4743-b267-1ba4bce08b9f",
		"name": "fun-with-k8s",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/automate",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Automate endpoint returns correct schema\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    const timestamp = new Date().getTime();\r",
							"    pm.expect(jsonData.message).to.eql(\"Automate all the things!\");\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"properties\": {\r",
							"    \"message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"timestamp\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"message\",\r",
							"    \"timestamp\"\r",
							"  ]\r",
							"};\r",
							"\r",
							"pm.test(\"Response body is valid JSON\", function() {\r",
							"  var data = JSON.parse(responseBody);\r",
							"  var valid = tv4.validate(data, schema, false, true);\r",
							"  if (valid !== true) {\r",
							"      console.log(tv4.error);\r",
							"  }\r",
							"  pm.expect(valid).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/automate",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"automate"
					]
				}
			},
			"response": []
		},
		{
			"name": "/healthz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns healthy as body\", function () {\r",
							"    pm.response.to.have.body(\"healthy\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/healthz",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"healthz"
					]
				}
			},
			"response": []
		},
		{
			"name": "/version",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Version deployed is correct\", function () {\r",
							"    pm.response.to.have.body(pm.variables.get(\"version\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/version",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"version"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 300ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(300);",
					"});",
					"",
					"pm.test(\"Status code is 200\", function () {",
					"     pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "127.0.0.1/api/v1"
		},
		{
			"key": "version",
			"value": "version_placeholder"
		}
	]
}