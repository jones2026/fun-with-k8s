---
kind: pipeline
name: verify
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: test
  image: golang:1.15
  commands:
  - go test ./... -cover -v

- name: lint
  image: golangci/golangci-lint:v1.35.2
  commands:
  - golangci-lint run

- name: build
  image: golang:1.15
  commands:
  - go build -ldflags "-X 'github.com/jones2026/fun-with-k8s/handlers.build=${DRONE_COMMIT}'" -o main
  environment:
    CGO_ENABLED: 0
    GOOS: linux

- name: docker_build
  image: plugins/docker
  settings:
    dry_run: true
    repo: pr
  when:
    event:
    - pull_request

- name: docker_publish
  image: plugins/docker
  settings:
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO,,}
    username:
      from_secret: docker_username
    tags:
    - latest
    - ${DRONE_COMMIT}
  when:
    event:
    - push

trigger:
  branch:
  - main

---
kind: pipeline
name: deploy
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: gcloud
  image: hashicorp/terraform
  commands:
  - echo $GCLOUD_SERVICE_KEY > $GOOGLE_APPLICATION_CREDENTIALS
  - cd terraform
  - export TF_VAR_api_version=${DRONE_COMMIT}
  - terraform init
  - terraform plan
  - terraform apply --auto-approve
  environment:
    GOOGLE_APPLICATION_CREDENTIALS: /tmp/credentials.json
    GCLOUD_SERVICE_KEY:
      from_secret: GCLOUD_SERVICE_KEY
      
- name: acceptance_test
  image: postman/newman
  commands:
  - source test.env
  - env | grep BASE_URL
  - newman run fun-with-k8s.postman_collection.json --env-var base_url=$BASE_URL --env-var version=${DRONE_COMMIT}

depends_on:
  - verify


...